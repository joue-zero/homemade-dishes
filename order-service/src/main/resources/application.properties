# Server Configuration
server.port=8084

# Spring Configuration
spring.main.allow-bean-definition-overriding=true
spring.output.ansi.enabled=always

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/order_service?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration - temporarily set to create-drop to ensure tables exist
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Logging Configuration
logging.level.root=WARN
logging.level.org.springframework=WARN
logging.level.com.dishes=WARN
# RabbitMQ specific logging
logging.level.org.springframework.amqp=INFO
logging.level.com.rabbitmq=INFO
logging.level.com.dishes.orderservice.config.OrderValidationConfig=INFO
logging.level.com.dishes.orderservice.listener.OrderValidationListener=INFO

# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.connection-timeout=5000

# Enable RabbitMQ listeners to use message queues for order processing
spring.rabbitmq.listener.simple.auto-startup=true
spring.rabbitmq.publisher-confirm-type=simple

# Order Validation Configuration
order.minimum.charge=10.0
